{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Chef-Solo System Operation 2.1 Demo, Admin Instance Environment",
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t2.micro": {
        "Arch": "64"
      },
      "m4.2xlarge": {
        "Arch": "64"
      },
      "m4.large": {
        "Arch": "64"
      },
      "m4.xlarge": {
        "Arch": "64"
      }
    },
    "AWSRegionArch2AMI": {
      "ap-northeast-1": {
        "64": "ami-e74b60e6"
      },
      "ap-southeast-1": {
        "64": "ami-d6e7c084"
      },
      "ap-southeast-2": {
        "64": "ami-abeb9e91"
      },
      "eu-central-1": {
        "64": "ami-3f1bd150"
      },
      "eu-west-1": {
        "64": "ami-405f7226"
      },
      "eu-west-2": {
        "64": "ami-ede2e889"
      },
      "sa-east-1": {
        "64": "ami-69d26774"
      },
      "us-east-1": {
        "64": "ami-3f1bd150"
      },
      "us-west-1": {
        "64": "ami-16efb076"
      },
      "us-west-2": {
        "64": "ami-a58d0dc5"
      }
    }
  },
  "Outputs": {
    "AdminInstance": {
      "Description": "DNS Name of the newly created Admin EC2 instance",
      "Value": {
        "Fn::GetAtt": [
          "AdminEc2Instance",
          "PublicDnsName"
        ]
      }
    },
    "ChefSoloInstanceProfileArn": {
      "Description": "The ARN of the IAM Instance Profile for the bootstrapped instance",
      "Value": {
        "Fn::GetAtt": [
          "ChefEC2InstanceProfile",
          "Arn"
        ]
      }
    },
    "ChefSoloInstanceSecurityGroupID": {
      "Description": "The Security Group ID for the bootstrapped instance",
      "Value": {
        "Fn::GetAtt": [
          "ChefSoloBootstrappedSecurityGroup",
          "GroupId"
        ]
      }
    }
  },
  "Parameters": {
    "ArtifcatsS3Bucket": {
      "Default": "myartifcatsbucket",
      "Description": "Name of your S3 Bucket that will store the artifacts (CFN will create and populate the bucket)",
      "Type": "String"
    },
    "InstanceType": {
      "AllowedValues": [
        "t2.micro",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge"
      ],
      "Default": "t2.micro",
      "Description": "EC2 instance type, e.g. t2.micro",
      "Type": "String"
    },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "SubnetID": {
      "Description": "VPC Subnet-ID (Must be Public Subnet which assigns PUBLIC IP to newly launched EC2 Instance)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "myVPCID": {
      "Description": "The ID of the VPC you will start the instance into",
      "Type": "AWS::EC2::VPC::Id"
    }
  },
  "Resources": {
    "AdminEC2InstanceProfile": {
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "AdminEC2TrustAccessRole"
          }
        ]
      },
      "Type": "AWS::IAM::InstanceProfile",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "a315314e-a1be-45c4-b192-25c49429bd01"
        }
      }
    },
    "AdminEC2TrustAccessRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ]
        },
        "Path": "/"
      },
      "Type": "AWS::IAM::Role",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "00e06b12-3947-46ad-9bcd-6e90e93ea359"
        }
      }
    },
    "AdminEc2Instance": {
      "DependsOn": "ArtifactS3Bucket",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "Comment": "Generate hidden files to be used as arguments for the bootstrap scripts",
          "config": {
            "files": {
              "/home/ubuntu/.region": {
                "content": {
                  "Ref": "AWS::Region"
                },
                "group": "ubuntu",
                "mode": "000644",
                "owner": "ubuntu"
              },
              "/home/ubuntu/.s3bucket": {
                "content": {
                  "Ref": "ArtifcatsS3Bucket"
                },
                "group": "ubuntu",
                "mode": "000644",
                "owner": "ubuntu"
              }
            },
            "sources": {
              "/home/ubuntu/": "https://github.com/ustrahlendorf/aws-training-demo/raw/master/course/system_operations/chef/admin-instance-resources.tar.gz"
            }
          }
        },
        "AWS::CloudFormation::Designer": {
          "id": "20a0c4a0-e7b9-4d73-9487-0800c1771dd8"
        }
      },
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "AdminEC2InstanceProfile"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "True",
            "DeleteOnTermination": "True",
            "SubnetId": {
              "Ref": "SubnetID"
            },
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Fn::GetAtt": [
                  "AdminInstanceSecurityGroup",
                  "GroupId"
                ]
              }
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Admin Instance"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "# Helper function\n",
                "function error_exit \n",
                "{\n",
                "/usr/local/bin/cfn-signal -e 1 -r \"$1\" '",
                {
                  "Ref": "AdminServerWaitHandle"
                },
                "'\n",
                "exit 1\n",
                "}\n",
                "STATUS=0\n",
                "#Update OS to latest , cfn tools installation & AWS CLI\n",
                "apt-get -y update || error_exit 'Failed to apt-get -y update'\n",
                "apt-get -y install python-pip || error_exit 'Failed To Install python-pip'\n",
                "pip install awscli || error_exit 'Failed To pip install awscli'\n",
                "cd /home/ubuntu/\n",
                "mkdir aws-cfn-bootstrap-latest\n",
                "curl https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz | tar xz -C aws-cfn-bootstrap-latest --strip-components 1\n",
                "easy_install aws-cfn-bootstrap-latest\n",
                "#Lets start to build the environment for the demo\n",
                "export S3BUCKET=",
                {
                  "Ref": "ArtifcatsS3Bucket"
                },
                "\n",
                "export REGION=",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "echo $S3BUCKET >> /tmp/env\n",
                "echo $REGION >> /tmp/env\n",
                "#Calling cfn-init to parse and install the above metadata section\n",
                "/usr/local/bin/cfn-init -s ",
                {
                  "Ref": "AWS::StackId"
                },
                " -r AdminEc2Instance ",
                "    --region ",
                {
                  "Ref": "AWS::Region"
                },
                " || error_exit 'Failed to run cfn-init check cfn logs'\n",
                "#Copying Artifacts to s3 bucket\n",
                "cd /home/ubuntu/\n",
                "curl -O https://s3-eu-west-1.amazonaws.com/kbitpub/ec2-chefsolo-demo/solo-all.tar.gz || error_exit 'Failed To download solo-all'\n",
                "curl -O https://s3-eu-west-1.amazonaws.com/kbitpub/ec2-chefsolo-demo/solo-all.tar.gz.md5 || error_exit 'Failed To download solomd5'\n",
                "curl -O https://s3-eu-west-1.amazonaws.com/kbitpub/ec2-chefsolo-demo/roles.tar.gz || error_exit 'Failed To download roles.tar.gz'\n",
                "curl -O https://s3-eu-west-1.amazonaws.com/kbitpub/ec2-chefsolo-demo/roles.tar.gz.md5 || error_exit 'Failed To download roles.tar.gz.md5'\n",
                "curl -O https://www.opscode.com/chef/install.sh || error_exit 'Failed To download install.sh (chef-solo)'\n",
                "aws s3 cp solo-all.tar.gz s3://${S3BUCKET}/cookbook/ --region $REGION || error_exit 'Failed to upload solo-all.tar.gz'\n",
                "aws s3 cp solo-all.tar.gz.md5 s3://${S3BUCKET}/cookbook/ --region $REGION || error_exit 'Failed to upload solo-all.tar.gz.md5'\n",
                "aws s3 cp install.sh s3://${S3BUCKET}/others/ --region $REGION || error_exit 'Failed to upload install.sh'\n",
                "aws s3 cp bootstrap.sh s3://${S3BUCKET}/others/ --acl public-read --region $REGION || error_exit 'Failed to upload bootstrap.sh'\n",
                "aws s3 cp solocron.sh s3://${S3BUCKET}/others/ --region $REGION || error_exit 'Failed to upload solocron.sh'\n",
                "aws s3 cp roles.tar.gz s3://${S3BUCKET}/roles/ --region $REGION || error_exit 'Failed to upload roles.tar.gz'\n",
                "aws s3 cp roles.tar.gz.md5 s3://${S3BUCKET}/roles/ --region $REGION || error_exit 'Failed to upload roles.tar.gz.md5'\n",
                "mkdir /home/ubuntu/solorb || error_exit 'Failed to create solorb'\n",
                "mkdir /home/ubuntu/nodejson || error_exit 'Failed to create nodejson'\n",
                "chown ubuntu.ubuntu /home/ubuntu/ -R || error_exit 'Failed to chown /home/ubuntu/ -R'\n",
                "# All is well so signal success\n",
                "/usr/local/bin/cfn-signal -e 0 -r \"Bootstrap has ended successfully\" '",
                {
                  "Ref": "AdminServerWaitHandle"
                },
                "'\n"
              ]
            ]
          }
        }
      },
      "Type": "AWS::EC2::Instance"
    },
    "AdminInstancePolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "*",
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        },
        "PolicyName": "AdminAllowAll",
        "Roles": [
          {
            "Ref": "AdminEC2TrustAccessRole"
          }
        ]
      },
      "Type": "AWS::IAM::Policy",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "66b07b66-872f-4d80-956a-05829e51eb06"
        }
      }
    },
    "AdminInstanceSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allow ssh to the Admin Instance",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "22",
            "IpProtocol": "tcp",
            "ToPort": "22"
          }
        ],
        "VpcId": {
          "Ref": "myVPCID"
        }
      },
      "Type": "AWS::EC2::SecurityGroup",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "d2a023ec-ed86-4ff1-814c-bf0a559ff060"
        }
      }
    },
    "AdminServerWaitCondition": {
      "DependsOn": "AdminEc2Instance",
      "Properties": {
        "Handle": {
          "Ref": "AdminServerWaitHandle"
        },
        "Timeout": "1200"
      },
      "Type": "AWS::CloudFormation::WaitCondition",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "b6c1209e-1222-4b5b-bde2-645bbad0d52c"
        }
      }
    },
    "AdminServerWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "4d093338-4c2b-453c-aa6c-ae1d21e6dc95"
        }
      }
    },
    "ArtifactS3Bucket": {
      "Properties": {
        "BucketName": {
          "Ref": "ArtifcatsS3Bucket"
        }
      },
      "Type": "AWS::S3::Bucket",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "ba87b978-66a2-48b6-a8ea-0a68fd63a073"
        }
      }
    },
    "ChefEC2InstanceProfile": {
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "ChefEC2TrustAccessRole"
          }
        ]
      },
      "Type": "AWS::IAM::InstanceProfile",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "36b67ef1-9255-4979-88d0-337a67eb9b0d"
        }
      }
    },
    "ChefEC2TrustAccessRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ]
        },
        "Path": "/"
      },
      "Type": "AWS::IAM::Role",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "e05bce0a-7547-4d7c-956d-976a3a9d4dd6"
        }
      }
    },
    "ChefInstancePolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "ArtifcatsS3Bucket"
                    }
                  ]
                ]
              }
            },
            {
              "Action": "s3:Get*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "ArtifcatsS3Bucket"
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": "s3:Get*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "ArtifcatsS3Bucket"
                    },
                    "/*"
                  ]
                ]
              }
            }
          ]
        },
        "PolicyName": "S3BootstrappedAccess",
        "Roles": [
          {
            "Ref": "ChefEC2TrustAccessRole"
          }
        ]
      },
      "Type": "AWS::IAM::Policy",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "eade4b16-1285-49b4-a9c2-a2dbbcb2223a"
        }
      }
    },
    "ChefSoloBootstrappedSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allow http/ssh to chef boostrapped instance",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "22",
            "IpProtocol": "tcp",
            "ToPort": "22"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          }
        ],
        "VpcId": {
          "Ref": "myVPCID"
        }
      },
      "Type": "AWS::EC2::SecurityGroup",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "d3d2332c-8039-498b-9486-22472eb7aa63"
        }
      }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "d3d2332c-8039-498b-9486-22472eb7aa63": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 60,
          "y": 90
        },
        "z": 1,
        "embeds": []
      },
      "e05bce0a-7547-4d7c-956d-976a3a9d4dd6": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 180,
          "y": 90
        },
        "z": 1,
        "embeds": []
      },
      "eade4b16-1285-49b4-a9c2-a2dbbcb2223a": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 60,
          "y": 210
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": [
          "e05bce0a-7547-4d7c-956d-976a3a9d4dd6"
        ]
      },
      "36b67ef1-9255-4979-88d0-337a67eb9b0d": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 180,
          "y": 210
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": [
          "e05bce0a-7547-4d7c-956d-976a3a9d4dd6"
        ]
      },
      "ba87b978-66a2-48b6-a8ea-0a68fd63a073": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 300,
          "y": 90
        },
        "z": 1,
        "embeds": []
      },
      "4d093338-4c2b-453c-aa6c-ae1d21e6dc95": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 300,
          "y": 210
        },
        "z": 1,
        "embeds": []
      },
      "d2a023ec-ed86-4ff1-814c-bf0a559ff060": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 60,
          "y": 330
        },
        "z": 1,
        "embeds": []
      },
      "00e06b12-3947-46ad-9bcd-6e90e93ea359": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 180,
          "y": 330
        },
        "z": 1,
        "embeds": []
      },
      "66b07b66-872f-4d80-956a-05829e51eb06": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 300,
          "y": 330
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": [
          "00e06b12-3947-46ad-9bcd-6e90e93ea359"
        ]
      },
      "a315314e-a1be-45c4-b192-25c49429bd01": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 420,
          "y": 90
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": [
          "00e06b12-3947-46ad-9bcd-6e90e93ea359"
        ]
      },
      "20a0c4a0-e7b9-4d73-9487-0800c1771dd8": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 420,
          "y": 210
        },
        "z": 1,
        "embeds": [],
        "dependson": [
          "ba87b978-66a2-48b6-a8ea-0a68fd63a073"
        ],
        "isrelatedto": [
          "a315314e-a1be-45c4-b192-25c49429bd01",
          "d2a023ec-ed86-4ff1-814c-bf0a559ff060",
          "4d093338-4c2b-453c-aa6c-ae1d21e6dc95"
        ]
      },
      "b6c1209e-1222-4b5b-bde2-645bbad0d52c": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 420,
          "y": 330
        },
        "z": 1,
        "embeds": [],
        "references": [
          "4d093338-4c2b-453c-aa6c-ae1d21e6dc95"
        ],
        "dependson": [
          "20a0c4a0-e7b9-4d73-9487-0800c1771dd8"
        ]
      }
    }
  }
}